การเปรียบเทียบการใช้งานฟังก์ชันและเมธอดในภาษา Go 
เมื่อเรามีฟังก์ชันที่รับค่าเป็นพารามิเตอร์และเมธอดที่ใช้ value receiver 

        1.ฟังก์ชันที่รับค่าเป็นพารามิเตอร์
ฟังก์ชันที่รับค่าเป็นพารามิเตอร์จำเป็นต้องรับค่าของชนิดที่ระบุเท่านั้น ไม่สามารถรับ pointer
ของชนิดนั้นได้ หากพยายามจะส่ง pointer จะทำให้เกิดข้อผิดพลาดในการคอมไพล์
ตัวอย่าง
var v Vertex
fmt.Println(AbsFunc(v)) ok
fmt.Println(AbsFunc(&v)) compile error!

        2.เมธอดที่ใช้ value receiver
เมธอดที่ใช้ value receiver สามารถเรียกได้ทั้งจากค่า (value) และ pointer ของชนิดนั้นๆ
เมื่อเรียกเมธอดจาก pointer จะทำให้ Go ตีความเป็นการเรียกเมธอดจากค่าโดยอัติโนมัติ
ตัวอย่าง
var v Vertex
fmt.Println(v.Abs()) ok
p := &v
fmt.Println(p.Abs()) ok
ในกรณีนี้ การเรียกเมธอด p.Abs() จะถูกตีความเป็น (*p).Abs() โดยอัตโนมัติ


