package main

import (
	f "fmt"
)

/*
การสร้าง Slice จาก Array
สามารถสร้าง Slice ได้โดยการตัด array
*/
/*
การประกาศ array
	- Syntax คือ var myarray = [length]datatype{values}
สร้าง slice จาก array
	- Syntax คือ myslice := myarray[start:end]
*/
//ตัวอย่างนี้แสดงวิธีการสร้าง slice จาก array
func main() {
	// ประกาศ array ชื่อ arr1 ที่มี 6 สมาชิก
	arr1 := [6]int{10, 11, 12, 13, 14, 15}
	// สร้าง slice จาก array arr1 โดยเริ่มจากสมาชิกที่ 2 ถึงสมาชิกที่ 3
	//การใช้งาน index:value ร่วมกับ Slice และ array
	myslice := arr1[2:4]
	//ฟังก์ชัน Printf() ใช้สำหรับการจัดรูปแบบ (format) อาร์กิวเมนต์
	//ตามการกำหนดรูปแบบ (formatting verb) ที่กำหนดไว้ ในที่นี้ int
	f.Printf("myslice = %v\n", myslice)      // พิมพ์ค่าใน myslice
	f.Printf("ความยาว = %d\n", len(myslice)) // พิมพ์ความยาวของ myslice
	f.Printf("ความจุ = %d\n", cap(myslice))  // พิมพ์ความจุของ myslice
}

/*จดตามความเข้าใจ
- ค่าข้อมูลของ array คือ [10,11,12,13,14,15]
- ชนิดข้อมูลของ array คือ int
- ขนาดของ array คือ 6
- ประกาศ array ชื่อ arr1 เพื่อรับ ค่าข้อมูล ชนิดข้อมูล ขนาดของ array
*/

/*อธิบายโค้ดที่เขียน
- ในตัวอย่างข้างต้น myslice เป็น slice ที่มีความยาว 2 ถูกสร้างจาก
arr1 ซึ่งเป็น array ที่มีความยาว 6
- slice เริ่มต้นจากสมาชิกที่ 3 ของ array ซึ่งมีค่าเป็น 12 (จำว่า array
ใช้อินเด็กซ์เริ่มต้นจาก 0 หมายถึง [0] เป็นสมาชิกแรก [1]เป็นสมาชิกที่สอง)
- slice สามารถขยายไปจนถึงจุดสิ้นสุดของ array ซึ่งหมายความว่า
ความจุของ slice คือ 4
*/
/* การขยายความเกี่ยวกับความจุ
ถ้า myslice เริ่มต้นจากสมาชิกที่ 0 ความจุของ slice จะเป็น 6 เนื่องจาก
มันสามารถขยายได้ถึงจุดสิ้นสุดของ array
*/
/* การใช้งานฟังก์ชัน len() และ cap()
- ฟังก์ชัน len(myslice) คืนค่าความยาวของ slice ซึ่งใน
ที่นี้คือ 2
- ฟังก์ชัน cap(myslice) คืนค่าความจุของ slice ซึ่งใน
ที่นี้คือ 4
*/
/*สรุป
- การสร้าง slice จาก array สามารถทำได้โดยการระบุ
ช่วงของสมาชิกที่ต้องการจาก array
- ฟังก์ชัน len() ใช้ในการคืนค่าความยาวของ slice
- ฟังก์ชัน cap() ใช้ในการคืนค่าความจุของ slice
- ความยาวของ slice คือจำนวนสมาชิกที่ถูกตัดออกมา
- ความจุของ slice คือจำนวนสมาชิกที่ slice สามารถ
ขยายได้ถึงจุดสิ้นสุดของ array
*/
