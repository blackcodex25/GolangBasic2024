package main

import (
	f "fmt"
)

/* คำสั่ง range ในภาษา Go ใช้เพื่อวนซ้ำผ่าน array, slice หรือ map
ได้อย่างง่ายดาย โดยจะคืนค่าทั้งดัชนี (index) และค่า (value) ในแต่ละการ
วนซ้ำ
*/
/* Syntax for index, value := range array|slice|map {
	โค้ดที่จะถูกดำเนินการในแต่ละการวนซ้ำ
}
*/
/*ตัวอย่างนี้ใช้ range เพื่อวนซ้ำผ่านอาร์เรย์ fruits และพิมพ์ทั้งดัชนี้และค่าที่
แต่ละตำแหน่ง (ตัวแปร idx เก็บดัชนีและตัวแปร val เก็บค่า)
*/
func main() {
	fruits := [3]string{"apple", "orange", "banana"} // ประกาศฟังก์ชัน array ชื่อ fruits ความยาว 3  ความจุ 3
	/*f.Printf("fruits = %v\n", fruits)
	f.Printf("ความยาว = %d\n", len(fruits))
	f.Printf("ความจุ = %d\n", cap(fruits))*/

	// ประกาศฟังก์ชัน for ชื่อ idx เก็บค่า i และตัวแปร val เก็บค่าตำแหน่งในอาร์เรย์
	// และประกาศ Keyword ชื่อ range เพื่อวนซ้ำอาร์เรย์ผ่านตัวแปร fruits
	for idx, val := range fruits {
		//ใช้ฟังก์ชัน Printf() พิมค่าและจัดรูปแบบ ข้อมูล ชนิดข้อมูล ของตัวแปร idx และ val
		f.Printf("%v\t%v\n", idx, val)
	} // Printf() ใช้สำหรับการจัดรูปแบบ (format) อากิวเมนต์ตามการกำหนดรูปแบบ (formatting verb) ที่กำหนดไว้
}

/*อธิบายโค้ด
สร้างอาร์เรย์ fruits ที่มีสามค่า คือ "apple","orange",และ "ิbanana"

ใช้ for idx, val := range fruits เพื่อวนซ้ำผ่านอาร์เรย์
		idx เก็บดัชนีของแต่ละค่าในอาร์เรย์
		val เก็บค่าของแต่ละตำแหน่งในอาร์เรย์

ใช้ f.Printf() เพื่อพิมพ์ดัชนีและค่าของแต่ละตำแหน่งในอาร์เรย์
*/
/*สรุป
1.คำสั่ง range ช่วยให้การวนซ้ำผ่าน อาร์เรย์, สไลซ์ หรือแมป เป็นเรื่องง่ายขึ้น
โดยสามารถเข้าถึงทั้งดัชนีและค่าได้พร้อมกัน
2.สามารถใช้ range เพื่อประหยัดเวลาและทำให้โค้ดอ่านง่ายขึ้น
*/
