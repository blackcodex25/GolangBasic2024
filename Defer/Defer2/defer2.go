package main

import (
	f "fmt"
	"os"
)

// การใช้ defer ในการจัดการทรัพยากร
/* defer มักถูกใช้สำหรับการจัดการทรัพยากร เช่น
การปิดไฟล์หรือการปล่อยล็อก (unlocking locks) ตัวอย่างเช่น
*/
func main() {
	file, err := os.Open("./Defer/Defer.txt")
	if err != nil {
		f.Println("Error opening file:", err)
		return
	}
	defer file.Close() // เลื่อนการปิดไฟล์ไปจนกว่าฟังก์ชัน main จะสิ้นสุด

	f.Println("File opened successfully") // ทำการอ่านไฟล์หรือทำงานอื่นๆ กับไฟล์
}

/* ฟังก์ชัน file.close() จะถูกเรียกใช้เมื่อฟังก์ชัน main สิ้นสุด ซึ่งจะปิดไฟล์ที่เปิดอยู่
หากมีข้อผิดพลาดในขั้นตอนการเปิดไฟล์ ฟังก์ชัน main จะจบการทำงานก่อน และ defer file.Close()
จะยังคงทำงานเพื่อปิดไฟล์ที่เปิดอยู่
*/
/* สรุป
defer ใช้สำหรับเลื่อนการเรียกใช้งานฟังก์ชันไปจนฟังก์ชันที่ล้อมรอบมันจะสิ้นสุด
ซึ่งช่วยในการจัดการทรัพยากรหรือทำความสะอาดได้อย่างสะดวก พารามิเตอร์ของฟังก์ชัน
defer จะถูกประเมินในทันทีที่คำสั่ง derfer ถูกเรียกใช้ แต่การเรียกใช้งานฟังก์ชันนั้นจะถูกเลื่อนจนกว่า
ฟังก์ชันที่ล้อมรอบจะสิ้นสุด

*/
