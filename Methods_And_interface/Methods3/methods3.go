package main

import (
	"fmt"
	"math"
)

// ประกาศชนิดข้อมูลใหม่ (type) ชื่อตัวแปร MyFloat ชนิดข้อมูล float64
type MyFloat float64

/*
	ประกาศเมธอด Abs ที่ทำงานบนตัวรับชื่อ receiver ชนิด MyFloat

และคืนค่าผลลัพธ์เป็น float64
*/
func (f MyFloat) Abs() float64 {
	if f < 0 {
		// ถ้า f มีค่าน้อยกว่า 0 ให้คืนค่าลบของ f
		return float64(-f)
	}
	// ถ้า f มีมากกว่าหรือเท่ากับ 0 ให้คืนค่า f
	return float64(f)

}
func main() {
	/* สร้างตัวแปร f ที่เป็นชนิดของ MyFloat
	   และกำหนดค่าเป็น -math.Sqrt2 (ค่าลบของรากที่สองของ2) */
	f := MyFloat(-math.Sqrt2)
	// เรียกใช้เมธอด Abs และพิมพ์ผลลัพธ์ที่ได้
	fmt.Println(f.Abs())
}

/*การคำนวณ
ตัวแปร f มีค่า -math.Sqrt2 (ประมาณ -1.414213562)
การเรียกใช้เมธอด Abs จะทำการตรวจสอบว่า f น้อยกว่า 0 หรือไม่
	- ในกรณีนี้ f น้อยกว่า 0 ดังนั้นจะคืนค่าลบของ f ซึ่งจะเป็นค่าบวกของ
	math.Sqrt2
ผลลัพธ์สุดท้ายที่ได้คือค่าบวกของ math.Sqrt2 (ประมาณ 1.414213562)
*/

/* สรุป
โปรแกรมนี้คำนวณค่าสัมบูรณ์ (Absolute value) ของตัวเลขที่เป็นชนิด MyFloat
โดยเมธอด Abs จะคืนค่าบวกของตัวเลขนั้นไม่ว่าจะเป็นค่าลบหรือบวกตั้งต้น และแสดงผลลัพธ์ที่ได้คือ
ค่าบวกของ -math.Sqrt2 หรือประมาณ 1.414213562
*/

/* 1.การ import แพ็กเกจ
fmt: ใช้สำหรับการจัดการฟอร์แมตและพิมพ์ข้อความ
math: ใช้สำหรับการคำนวณทางคณิตศาสตร์ เช่น ฟังก์ชัน Sqrt ที่ใช้ในการหาค่ารากที่สอง

2.การประกาศชนิดข้อมูลใหม่
MyFloat: เป็นการนิยามชนิดข้อมูลใหม่โดยการใช้ float64 เป็นฐาน

3.การประกาศเมธอด Abs:
เมธอด Abs ทำงานบนตัวรับชื่อ receiver ที่เป็นชนิด MyFloat และคืนค่าผลลัพธ์เป็น float64
ถ้าค่าของ f น้อยกว่า 0 จะคืนค่าลบของ f โดยแปลงให้เป็น float64
ถ้าค่าของ f มากกว่าหรือเท่ากับ 0 จะคืนค่า f โดยแปลงให้เป็น float64

4.ฟังก์ชัน main
สร้างตัวแปร f ซึ่งเป็นชนิด MyFloat และ
กำหนดค่าเป็น -math.Sqrt2 ซึ่งเป็นค่าลบของรากที่สองของ 2
เรียกใช้เมธอด Abs และพิมพ์ผลลัพธ์ที่ได้
*/
