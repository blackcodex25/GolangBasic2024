package main

import (
	f "fmt"
	"math"
)

// การคำนวณและปรับขนาดของเวกเตอร์ในระบบคาร์ทิเซียน (Cartesian Coordinates)

/* โค้ดนี้แสดงให้เห็นว่าการสร้าง method ใน Go นั้นเหมือนกับการสร้างฟังก์ชันปกติ
แต่มี receiver argument เพิ่มเข้ามา ในตัวอย่างนี้ ฟังก์ชันชื่อ Abs ถูกเขียนใหม่
เป็นฟังก์ชันปกติที่ไม่มี receiver argument และการทำงานของโปรแกรมยังคง
เหมือนเดิม
*/
/* math เป็นแพ็กเกจที่มีฟังก์ชันทางคณิตศาสตร์ เช่น
ฟังก์ชัน Sqrt สำหรับคำนวณค่ารากที่สอง */
type Vertex struct { // ประกาศ struct ชื่อตัวแปร Vertex
	X, Y float64 // กำหนดสองฟิลด์คือ X และ Y ที่มีชนิดข้อมูลเป็น float64
}

// ประกาศฟังก์ชัน Abs ที่รับพารามิเตอร์ v ซึ่งเป็นตัวแปรของ type Vertex
func Abs(v Vertex) float64 { // ฟังก์ชันชื่อตัวแปร Abs จะคืนค่าผลลัพธ์ชนิด float64
	return math.Sqrt(v.X*v.X + v.Y*v.Y)
} /* ภายในฟังก์ชันใช้สูตรคำนวณค่าความยาวของเวกเตอร์จากพิกัด X และ Y
โดยใช้สูตรคำนวณความยาวของเส้นทแยงมุมในระบบพิกัดคาร์ทิเซียน √(X^2 + Y^2)
และคืนค่าผลลัพธ์ที่คำนวณได้
*/
func main() {
	v := Vertex{3, 4} // ประกาศตัวแปร v เป็น instance ของ Vertex โดยกำหนดค่า X เป็น 3 และ Y เป็น 4
	f.Println(Abs(v)) // เรียกฟังก์ชัน Abs โดยส่ง v เป็นพารามิเตอร์และพิมพ์ ผลลัพธ์ที่ได้จากฟังก์ชัน Abs
}

/*การคำนวณ
ตัวแปร v มีค่า x เป็น 3 และ Y มีค่าเป็น 4
การคำนวน math.Sqrt(3*3 + 4*4) ซึ่งจะได้ค่า math.Sqrt(9 + 16) ซึ่งเท่ากับ
math.Sqrt(25) และผลลัพธ์ที่ได้คือ 5
สรุป
โปรแกรมนี้คำนวณค่าความยาวของเวกเตอร์ จากพิกัด (3, 4)
และแสดงผลลัพธ์ที่ได้คือ 5
*/
/* อธิบายโค้ด ยาวหน่อยนะ
1.นำเข้าแพ็กเกจ
fmt ใช้สำหรับการจัดการฟอร์แมตและพิมพ์ข้อความ
math ใช้สำหรับการคำนวณทางคณิตศาสตร์ เช่น ฟังก์ชัน
Sqrt ที่ใช้ในการหาค่ารากที่สอง
2.ประกาศ struct
Vertex เป็นสตรัคที่มีสองฟิลด์คือตัวแปร x และ Y
ทั้งสองฟิลด์มีชนิดข้อมูลเป็น float64
3.การประกาศฟังก์ชัน Abs
ฟังก์ชัน Abs รับอินพุตเป็น Vertex และคืนค่าผลลัพธ์เป็น float64
ภายในฟังก์ชันมีการคำนวณค่าความยาวของเวกเตอร์โดย
ใช้สูตร math.Sqrt(v.X*v.X + v.Y*v.Y) ซึ่งเป็นการหาค่ารากที่สองของผลรวม
ของกำลังสองของ X และ Y
4.ฟังก์ชัน mian
สร้างตัวแปร v ซึ่งเป็นชนิด Vertex และกำหนดค่า X เป็น 3 และ Y เป็น 4
เรียกใช้งานฟังก์ชัน Abs และส่งค่าตัวแปร v เข้าไป จากนั้นพิมพ์ผลลัพธ์ที่ได้
*/
