package main

import (
	f "fmt"
	"math"
)

// การคำนวณและปรับขนาดของเวกเตอร์ในระบบคาร์ทิเซียน (Cartesian Coordinates)

/*การประกาศเมธอดด้วย pointer receiver
ในภาษา Go เราสามารถประกาศเมธอดที่มีตัวรับเป็น pointer ได้
ซึ่งหมายความว่าชนิดของตัวรับจะมีไวยากรณ์เป็น *T สำหรับชนิด
ข้อมูล T (เช่น *Vertex) โดยตัวรับไม่สามารถเป็น pointer อยู่แล้ว
เช่น *int
*/

/*ตัวอย่างการประกาศเมธอดด้วย pointer receiver
ในตัวอย่างนี้เรามีเมธอด Scale ที่ประกาศบน *Vertex
*/

/*
	นำเข้าแพ็กเกจ math ใช้สำหรับการคำนวณทางคณิตศาสตร์

เช่นฟังก์ชัน Sqrt ที่ใช้ในการหาค่ารากที่สอง
*/
// ประกาศฟังก์ชัน struct ที่มีสองฟิลด์คือ x และ y ทั้งสองฟิลด์มีชนิดข้อมูลเป็น float64
type Vertex struct {
	X, Y float64
}

// เมธอดชื่อตัวแปร Abs ที่มีตัวรับค่า value receiver
func (v Vertex) Abs() float64 {
	return math.Sqrt(v.X*v.X + v.Y*v.Y) // ใช้สูตรคณิตศาสตร์เพื่อคำนวณความยาวของเวกเตอร์
	// การหาค่ารากที่สองของผลรวมกำลังสองของ X และ Y
} // เมธอด Abs ทำงานบน receiver ที่เป็นชนิด Vertex และคืนค่าผลลัพธ์เป็น float64

// เมธอด Scale ที่มีตัวรับเป็น pointer receiver
func (v *Vertex) Scale(f float64) { // ประกาศเมธอด Scale ทำงานบน receiver ที่เป็น pointer ชนิด *Vertex และมีพารามิเตอร์เป็น float64
	v.X = v.X * f // คูณค่าของ v.X ด้วย f และเก็บผลลัพธ์กลับไปที่ v.X
	v.Y = v.Y * f // คูณค่าของ v.Y ด้วย f และเก็บผลลัพธ์กลับไปที่ v.Y
	// ซึ่งสามารถเปลี่ยนค่าของตัวแปรต้นฉบับได้
}
func main() {
	v := Vertex{3, 4}  // ประกาศตัวแปร v ซึ่งมีชนิด Vertex และกำหนดค่า X เป็น 3 และ Y เป็น 4
	v.Scale(10)        // เรียกใช้เมธอดชื่อตัวแปร Scale บน v ด้วยค่า 10 ทำให้ค่าของ X และ Y เปลี่ยนแปลง โดย X จะเปลี่ยนเป็น 30 และ Y จะเปลี่ยนเป็น 40
	f.Println(v.Abs()) // เรียกใช้เมธอดชื่อตัวแปร Abs บน v และพิมพ์ผลลัพธ์ที่ได้ ซึ่งจะคำนวณค่าความยาวของเวกเตอร์
	// จากค่า X และ Y ที่เปลี่ยนแปลงไป
}

/*หลักการทำงานของโปรแกรมนี้
1.ตัวแปร v เริ่มต้นมีค่า Vartex{3,4}
2.หลังจากเรียก v.Scale(10) ค่าของ v จะเปลี่ยนเป็น
Vertex{30,40}
3.การเรียกใช้ v.Abs() จะคืนค่าผลลัพธ์เป็น math.Sqrt(30*30 + 40*40) ซึ่งเท่ากับ 50
4.ผลลัพธ์ที่พิมพ์ออกมาคือ 50
*/
/* ข้อสังเกต
- เมธอดชื่อตัวแปร Scale ใช้ pointer receiver(*Vertex) ทำให้
สามารถเปลี่ยนแปลงค่าของ Vertex ที่ถูกส่งเข้ามาได้

- เมธอดชื่อตัวแปร Abs ใช้ value receiver (*Vertex) ทำให้ไม่
สามารถเปลี่ยนแปลงค่าของ Vertex ที่ถูกส่งเข้ามาได้
แต่ใช้ในการคำนวณค่าความยาวของเวกเตอร์จากค่าที่มีอยู่
*/
