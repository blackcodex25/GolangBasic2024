package main

import (
	f "fmt"
)

//การใช้คำสั่ง Nested if ในภาษา Go
//คำสั่ง Nested if สามารถใช้คำสั่ง if ซ้อนกันได้ โดยเรียกว่าวิธีนี้ว่า
//"nested if " หรือ "if ซ้อนกัน"
/*Syntax
if dondition1{
	โค้ดที่จะถูกดำเนินการหาก condition1 เป็นจริง
	if condition2{
	โค้ดที่จะถูกดำเนินการหากทั้ง condition1 และ condition2 เป็นจริง
	}
}
*/
//การใช้คำสั่ง nested if ในภาษา Go
func main() {
	num := 20
	if num >= 10 {
		f.Println("Num มากกว่า 10")
		if num > 15 {
			f.Println("Num ยังคงมากกว่า 15")
		}
	} else {
		f.Println("Num น้อยกว่า 10")
	}
}

/*อธิบายโค้ด
1.ประกาศตัวแปร num และกำหนดค่าเป็น 20
2.ตรวจสอบเงื่อนไขแรก if num >= 10
เนื่องจาก num มีค่า 20 ซึ่งมากกว่าหรือเท่ากับ 10
เงื่อนไขนี้เป็นจริง จึงแสดงข้อความ "Num มากกว่า 10"
3.ตรวจสอบเงื่อนไขซ้อน if num > 15
เนื่องจาก num มีค่า 20 ซึ่งมากกว่า 15 เงื่อนไขนี้เป็นจริง
จึงแสดงข้อความ "Num ยังคงมากกว่า 15"
4.ถ้าเงื่อนไขแรก if num >= 10 เป็นเท็จ บล็อก else จะถูกดำเนินการ
และแสดงข้อความ "Num น้อยกว่า 10"
*/
/* สรุป
การใช้คำสั่ง nested if ทำให้สามารถตรวจสอบหลายเงื่อนไข
ภายในเงื่อนไขหลักได้ โดยจะดำเนินการบล็อกโค้ดภายในเมื่อ
เงื่อนไขทั้งหมดเป็นจริงเท่านั้น วิธีนี้ช่วยให้โค้ดมีความยืดหยุ่นในการ
ตรวจสอบเงื่อนไขที่ซับซ้อนและซ้อนกัน
*/
