package main

import (
	f "fmt"
)

/*ในภาษา Go
Pointers ใช้เพื่อเก็บที่อยู่หน่วยความจำของค่าหนึ่งๆ
การใช้ Pointers ช่วยให้สามารถอ้างอิงและแก้ไขค่าที่หน่วยความจำที่เฉพาะ
เจาะจงได้โดยตรง
*/
/* ประเภทของ Pointer
*T เป็นประเภท pointer ที่ชี้ไปยังค่าประเภท T ค่าเริ่มต้นของ pointer คือ nill
ซึ่งหมายความว่า pointer ยังไม่ได้ชี้ไปยังที่อยู่หน่วยความจำใดๆ
*/
// nill ค่าที่ยังไม่ได้กำหนดให้ตัวแปรอื่นหรือยังไม่เปลี่ยนแปลงเป็น type อื่น มันจะไม่มี type

// ตัวอย่างการประกาศ Pointer ที่ชี้ไปยัง interger โดยเครื่องหมายสตาร์ *
var p *int

func main() {
	// การสร้าง Pointer เครื่องหมาย & ใช้ในการสร้าง pointer โดย
	// จะคืนค่าที่อยู่หน่วยความจำของตัวแปร
	// โค้ดตัวอย่างนี้ p จะเก็บที่อยู่หน่วยความจำของ i
	i := 42 // ประกาศตัวแปร i และตั้งค่าเริ่มต้นเป็น 42
	p = &i  // ประกาศ pointer p ที่ชี้ไปยังตัวแปร i
	// การ Dereferencing
	// ใช้เครื่่องหมายสตาร์ * ใช้ในการ defeferencing pointer หมายถึงการเข้าถึงค่าที่ pointer ชี้ไป
	f.Println(*p) // พิมพ์ค่า 42 ที่ i เก็บอยู่ผ่าน pointer p
	*p = 21       // เปลี่ยนค่าใน i เป็น 21 ผ่าน pointer p
	// การ dereferencing หมายถึงการอ่านหรือเขียนค่าที่หน่วยความจำที่ pointer ชี้ไป
	f.Println(i) // แสดงค่าของ i หลังจากเปลี่ยนผ่าน pointer p
	// ผลลัพธ์ 21
}

/*ข้อแตกต่างระหว่าง Go และภาษา C
ในภาษา Go ไม่มี Pointer arithmetic หมายความว่าเราไม่สามารถทำการคำนวณกับ
ที่อยู่หน่วยความจำเหมือนในภาษา C
*/
/* สรุป
Pointers ใน Go ใช้สำหรับการอ้างอิงและแก้ไขค่าที่หน่วยความจำที่เฉพาะเจาะจง
การใช้ pointers มีประโยชน์ในการลดการคัดลอกข้อมูลขนาดใหญ่และ
ในการเขียนโปรแกรมที่ต้องการ การเข้าถึงหน่วยความจำโดยตรง
*/
