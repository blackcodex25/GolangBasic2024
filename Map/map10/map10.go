package main

import (
	f "fmt"
)

// การวนลูปผ่าน map ตามลำดับที่กำหนด
/* map เป็นโครงสร้างข้อมูลที่ไม่มีการจัดเรียงในตัว ดังนั้น
หากเราต้องการวนลูปผ่าน map ในลำดับที่เฉพาะเจาะจง เรา
จำเป็นต้องการใช้โครงสร้างข้อมูลเพิ่มเติมเพื่อกำหนดลำดับนั้น
*/
/*วิธีการวนลูปผ่าน map ในลำดับที่กำหนดไว้ล่วงหน้า
 */
func main() {
	// ประกาศฟังก์ชัน map ชื่อตัวแปร a ถูกสร้างขึ้นและประกอบด้วยคีย์ที่เป็นสตริงและค่าที่เป็นจำนวนเต็ม
	a := map[string]int{"one": 1, "two": 2, "three": 3, "four": 4}

	// ประกาศฟังก์ชัน slice ชื่อ b ชนิดข้อมูล string
	// ใช้ฟังก์ชัน append เพื่อเพิมค่าลงใน slice ตัวแปร b
	var b []string
	b = append(b, "one", "two", "three", "four")

	/* วนลูป map โดยไม่มีการจัดเรียง
	   ใช้ for loop เพื่อวนลูปผ่านคู่ key:value ใน map ชื่อตัวแปร a
	   พิมพ์คู่ key:value ของ map ชื่อตัวแปร a ออกทางจอภาพ
	   โดยไม่สนใจลำดับของคีย์ใน map */
	for k, v := range a {
		f.Printf("%v : %v, ", k, v)
	}
	f.Println() //พิมพ์บรรทัดว่างเพื่อแยกผลลัพธ์

	// การวนลูปผ่าน map a ตามลำดับที่กำหนดใน slice b
	for _, element := range b {
		f.Printf("%v : %v, ", element, a[element])
		/* ใช้ for loop เพื่อวนลูปผ่านแต่ละ key ที่เก็บใน slice b
		   ใช้ key จาก slice b เพื่อเข้าถึงและพิมพ์ค่าที่ตรงกันใน map a
		   ตามลำดับที่กำหนดใน slice b */
	} // วนลูปนี้จะใช้ลำดับที่กำหนดใน b เพื่อพิมพ์คู่ key:value จาก map ชื่อตัวแปร a ตามลำดับที่กำหนดไว้
}

/* ผลลัพธ์
จากการรันโค้ดด้านบนจะแสดงการพิมพ์คู่ key:value ของ map ชื่อตัวแปร a
โดยไม่มีการจัดเรียง และตามด้วยการพิมพ์คู่ key:value ตามลำดับที่กำหนดใน b
four : 4, one : 1, three : 3, two : 2,
one : 1, two : 2, three : 3, four : 4,
การใช้วิธีนี้ช่วยให้เราสามารถ วนลูปผ่าน map ตามลำดับที่เราต้องการได้
โดยการใช้ slice เพื่อเก็บลำดับของคีย์ที่ต้องการในการวนลูป
*/
/* Note:
การระบุชนิดข้อมูลของ map และ slice รวมถึงการใช้ for loop เพื่อวนลูป
ผ่าน map และ slice
*/
