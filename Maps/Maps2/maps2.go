package main

import (
	f "fmt"
)

/*การสร้างและใช้งาน Maps ในภาษา Go
การสร้าง Maps
ในการสร้างและใช้งาน maps ในภาษา Go เราสารมารถสร้าง maps
ได้หลายวิธีโดย Maps จะเก็บคู่ของข้อมูลในรูปแบบ key ซึ่ง key
จะต้องไม่ซ้ำกันใน maps เดียวกัน

การสร้าง Maps
วิธีการสร้าง maps ในภาษา Go สั่งเกตว่าลำดับของข้อมูลในโค้ดอาจจะแตกต่างจากลำดับของข้อมูลใน
ผลลัพธ์เนื่องจากการจัดเก็บข้อมูลใน Maps ถูกออกแบบมาเพืี่อ ให้การดึงข้อมูลมีประสิทธิภาพสูง
*/
// สร้าง maps ชื่อ a ที่เก็บข้อมูลประเภท string:string โดยมี key คือ "brand": "Ford", "model": "Mustang", "year": "1964"
var a = map[string]string{"brand": "Ford", "model": "Mustang", "year": "1964"}

func main() {
	// สร้าง maps ชื่อ b ที่เก็บข้อมูลประเภท string:int โดยมี key คือ "Oslo": 1, "Bergen": 2, "Trondheim": 3, "Stavanger": 4
	b := map[string]int{"Oslo": 1, "Bergen": 2, "Trondheim": 3, "Stavanger": 4}

	// แสดงผลลัพธ์ของ maps a
	f.Printf("a\t%v\n", a)
	// a\t%v\n ฟอร์แมตสตริงที่ใช้แสดงผลโดย
	// %v เป็นรูปแบบทั่วไปสำหรับการพิมพ์ค่าตัวแปร
	// \t เป็นแท็บ, และ \n เป็นการขึ้นบรรทัดใหม่
	// a ตัวแปรของ Maps ที่ต้องการแสดงผล

	// แสดงผลลัพธ์ maps b
	f.Printf("b\t%v\n", b)
	// b\t%v\n ฟอร์แมตสตริงที่ใช้แสดงผลโดย
	// %v เป็นรูปแบบทั่วไปสำหรับการพิมพ์ค่าตัวแปร
	// \t เป็นแท็บ, และ \n เป็นการขึ้นบรรทัดใหม่
	// b ตัวแปรของ Maps ที่ต้องการแสดงผล
}

/*ผลลัพธ์
a	map[brand:Ford model:Mustang year:1964]
b	map[Bergen:2 Oslo:1 Stavanger:4 Trondheim:3]

[Done] exited with code=0 in 0.274 seconds


*/

/*สรุป
maps a เก็บข้อมูลประเภท string:string สำหรับข้อมูลเกี่ยวกับรถ
maps b เก็บข้อมูลประเภท string:int สำหรับเก็บข้อมูลตัวเลขที่เกี่ยวข้องกับชื่อเมือง
การใช้ฟังก์ชัน Printf() เพื่อพิมพ์แผนที่เหล่านี้ทำให้เราเห็น ข้อมูลในรูปแบบที่เข้าใจง่ายและ
สะดวกในการตรวจสอบข้อมูลภายใน Maps
*/
