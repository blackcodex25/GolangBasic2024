package main

import (
	f "fmt"
)

//การละค่าที่คืน (Omitting Return Values)
/*หากเราต้องการละบางค่าที่คืนจากฟังก์ชัน
เราสามารถใช้เครื่องหมายขีดล่าง _ เพื่อข้ามค่านั้น
*/
// การสร้างฟังก์ชัน (Function Creation)
// ประกาศฟังก์ชันชื่อ myFunction รับค่าอากิวเมนต์ x ชนิด int และ y ชนิด string
// ประกาศฟังก์ชันคืนค่าชื่อ result ชนิด int และตัวที่สองชื่อ txt1 ชนิด string
func myFunction(x int, y string) (result int, txt1 string) {
	result = x + x       //เรียกใช้งานฟังก์ชันคืนค่าชื่อ result รับคืนค่าผลรวม x + x
	txt1 = y + " World!" //เรียกใช้งานฟังก์ชันคืนค่าชื่อ txt1 รับคืนค่าข้อความ y + " World"
	return               //ประกาศฟังก์ชัน return ไม่ระบุค่าที่จะคืน จะคืนค่าผลรวมทั้ง result และ txt1 ส่งออกให้ฟังก์ชัน
}

// การเรียกใช้ฟังก์ชันและการละค่าที่คืน (Omitting Return Values)
func main() {
	// เรียกใช้งานฟังก์ชันชื่อ myFunction() กำหนดอากิวเมนต์เป็นตัวเลข 5 และเป็นข้อความ "Hello"
	a, _ := myFunction(5, "Hello") // กำหนดตัวแปร a จัดเก็บค่าที่คืนของ myFunction() ตัวที่สองใช้เครื่องหมาย _ เพื่อข้ามค่าที่คืนตัวที่สองชื่อ(txt1)
	f.Println(a)                   // พิมพ์ผลลัพธ์ a ซึ่งคือ 10
}

/*อธิบายโค้ด
- โค้ดตัวอย่างนี้ เราเรียกใช้ myFunction และจัดเก็บเฉพาะค่าที่คืนตัวแรกในตัวแปร a
- ใช้เครื่องหมาย _ เพื่อข้ามค่าที่คืนตัวที่สอง
- ผลลัพธ์ 10
*/
/* สรุป
การใช้เครื่องหมายขีดล่าง _  เพื่อข้ามค่าที่คืนจากฟังก์ชันช่วยให้
เราสามารถละการใช้ค่าที่เราไม่ต้องการได้ ทำให้โค้ดของเราดูสะอาดและเรียบง่ายขึ้น
*/
