package main

import (
	f "fmt"
)

/* โค้ดนี้ใช้ Generics ในภาษา Go เพื่อสร้างฟังก์ชัน Index ที่สามารถทำงานกับ slice
ของชนิดข้อมูลใดๆ ที่สามารถเปรียบเทียบได้ (comparable) ฟังก์ชันนี้จะคืนค่าดัชนีของค่า x
ใน slice ชื่อ s หรือคืนค่า -1 หากไม่พบ
*/
/* T เป็นพารามิเตอร์ชนิดข้อมูลที่ถูกกำหนดให้ต้องเป็นชนิดที่สามารถเปรียบเทียบได้
(comparable)
*/
/* ประกาศฟังก์ชัน Index กำหนดพารามิเตอร์สองตัวชื่อตัวแปร s เป็น slice ของชนิด T
และ x เป็นค่าของชนิด T */
func Index[T comparable](s []T, x T) int {
	// ฟังก์ชัน for วนลูปผ่าน slice ชื่อตัวแปร s ประกาศตัวแปรสองตัว i และ v
	for i, v := range s {
		// ตรวจสอบว่าค่าปัจจุบัน v เท่ากับ x หรือไม่
		if v == x {
			// ถ้าพบ x ใน s ฟังก์ชัน return จะคืนค่าดัชนี i ของ x
			return i
		}
	}
	return -1 // ถ้าไม่พบ x ฟังก์ชัน return จะคืนค่า -1
}
func main() {
	/* ฟังก์ชัน Index นี้สามารถใช้งานได้กับทั้ง slice ของ int และ string
	โดยไม่ต้องเขียนฟังก์ชันแยกกัน */
	// ประกาศ slice ของ int ชื่อ si
	si := []int{10, 20, 15, -10}
	// เรียกใช้ฟังก์ชัน Index เพื่อหาดัชนีของค่า 15 ใน si
	f.Println(Index(si, 15))
	// ประกาศ slice ของ string ชื่อ ss
	ss := []string{"foo", "bar", "baz"}
	// เรียกใช้ฟังก์ชัน Index เพื่อหาค่าดัชนี hello ใน ss
	f.Println(Index(ss, "hello"))
}

/* การทำงานของโปรแกรม
1.การหาดัชนีของ 15 ใน slice ของ int
si := []int{10, 20, 15, -10}
f.Println(Index(si, 15))
ฟังก์ชัน Index วนลูปผ่าน si และพบว่า 15 อยู่ที่ดัชนี้ 2
พิมพ์ค่า 2 ออกทางจอ

2.การหาดัชนีของ hello ใน slice ของ string
ss := []string{"foo", "bar", "baz"}
f.Println(Index(ss, "hello"))
ฟังก์ชัน Index วนลูปผ่าน ss และไม่พบ hello
พิมพ์ค่า -1 ออกจอ
*/

/* สรุป
โค้ดนี้แสดงการใช้ Generics ในภาษา Go เพื่อสร้างฟังก์ชัน Index ที่สามารถ
ทำงานกับ slice ของชนิดข้อมูลใดๆ ที่สามารถเปรียบเทียบได้ (comparable)
ฟังก์ชันจะคืนค่าดัชนีของค่า x ใน slice ชื่อตัวแปร s หรือคืนค่า -1 หากไม่พบ
ฟังก์ชัน Index นี้สามารถใช้งานได้กับทั้ง slice ของ int และ string โดยไม่
ต้องเขียนฟังก์ชันแยกกัน
*/
