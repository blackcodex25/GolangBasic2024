ในภาษา Go การประกาศเมธอดสำหรับชนิดข้อมูลสามารถทำได้
สองแบบหลักๆ คือ
1. Pointer Receiver: เมธอดที่ใช้ตัวรับเป็น Pointer ของชนิดข้อมูล
2. Value Receiver: เมธอดที่ใช้ตัวรับเป็นค่าของชนิดข้อมูล

1. Pointer Receiver
Pointer Receiver ใช้สำหรับการเปลี่ยนแปลงค่าของตัวรับ
และเพื่อหลีกเลี่ยงการคัดลอกค่าของตัวรับในกรณีที่ตัวรับมีขนาดใหญ่

ตัวอย่างการประกาศ Pointer Receiver
func (v *Vertex) Scale(f float64){
    v.X = v.X * f
    v.Y = v.Y * f
}

2. Value Receiver
Value Receiver ใช้สำหรับการทำงานที่ไม่ต้องการเปลี่ยนแปลงค่าตัวรับ
และสามารถใช้กับชนิดข้อมูลขนาดเล็กที่ไม่ทำให้เกิดค่าใช้จ่ายสูงในการคัดลอกค่า

ตัวอย่างการประกาศ Value Receiver
func (v Vertex) Abs() float64{
    return math.Sqrt(v.X * v.X + v.Y * v.Y)
}

ข้อควรทราบเพิ่มเติม
Consistency: ในการพัฒนาโปรแกรม ควรใช้ pointer receiver หรือ value receiver
อย่างใดอย่างหนึ่งสำหรับทุกเมธอดในชนิดข้อมูลเดียวกัน 
เพื่อความสม่ำเสมอและความเข้าใจที่ง่ายของโค้ด

ข้อแนะนำในการเลือกใช้ Receiver
1. ใช้ Pointer Receiver:
- เมื่อต้องการเปลี่ยนแปลงค่าภายใน struct
- เมื่อ struct มีขนาดใหญ่และการคัดลอกค่าเป็นเริ่องที่
ไม่ค่อยมีประสิทธิภาพ

2. ใช้ Value Receiver:
- เมื่อต้องการเรียกเมธอดที่ไม่เปลี่ยนแปลงค่าภายใน struct
- เมื่อต้องการให้เมธอดทำงานบนสำเนาของ struct

สรุป 
ในภาษา Go มี Pointer Receiver และ Value Receiver
ที่ใช้ในการกำหนดเมธอดสำหรับ struct หรือชนิดข้อมูลที่กำหนด
นอกจากนี้ยังมีแนวคิดที่เกี่ยวข้องเช่น การใช้งานอินเตอร์เฟซและ
การจัดการกับชนิดข้อมูลที่แตกต่างกัน ซึ่งเป็นสิ่งสำคัญในการ
ออกแบบและเขียนโปรแกรมใน Go