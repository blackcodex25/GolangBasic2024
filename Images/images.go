package main

import (
	f "fmt"
	"image"
)

// นำเข้าแพ็กเกจ image เพื่อใช้ในการสร้างและจัดการกับภาพ
/*
แพ็กเกจ image กำหนดอินเตอร์เฟซ Image ซึ่งมีเมธอดสามตัว
type Image interface{
	ColorModel() color.Model
	Bounds() Rectangle
	At(x, y int) color.Alpha
}
	1.ColorModel: คืนค่าชนิดข้อมูลสีที่ใช้ในภาพ (color.Model)
	2.Bounds: คืนค่าขอบเขตของภาพเป็น Rectangle
	3.At: คืนค่าสีของพิกเซลที่ตำแหน่ง (x, y) เป็น color.Color
*/
func main() {
	/* สร้างภาพใหม่ชนิด RGBA โดยใช้ฟังก์ชัน image.NewRGBA
	ฟังก์ชัน image.NewRGBA รับพารามิเตอร์เป็น image.Rect
	ซึ่งกำหนดขอบเขตของภาพจาก (0,0) ถึง (100,100)
	ภาพที่สร้างมีขนาด 100x100 พิกเซล */
	m := image.NewRGBA(image.Rect(0, 0, 100, 100))

	/* เรียกใช้เมธอด Bounds ของภาพ m
	เพื่อคืนค่าขอบเขตของภาพ
	พิมพ์ขอบเขตของภาพออกทางจอ */
	f.Println(m.Bounds())

	/* เรียกใช้เมธอด At ของภาพ m เพื่อคืนค่าสีของพิกเซลที่
	ตำแหน่ง (0,0)
	เนื่องจากเมธอด At คืนค่าชนิด color.Color เราจึงเรียกใช้
	เมธอด RGBA เพื่อแปลงค่าสีเป็นค่า RGBA แบบ 32 บิต
	(red, green, blue, alpha)
	พิมพ์ค่าสีของพิกเซลออกทางจอ
	*/
	f.Println(m.At(0, 0).RGBA())
}

/* การทำงานของโปรแกรม
1.การสร้างภาพ
โปรแกรมสร้างภาพชนิด RGBA ขนาด 100x100 พิกเซล โดยที่
ทุกพิกเซลเริ่มต้นมีค่าสีเริ่มต้นเป็นสีดำและค่าความทึบแสง (alpha)
เป็น 0

2.การพิมพ์ขอบเขตของภาพ
ขอบเขตของภาพที่พิมพ์ออกมาจะเป็น (0, 0) - (100, 100)

3.พิมพ์ค่าสีของพิกเซลที่ตำแหน่ง (0, 0)
ค่าสีของพิกเซลที่ตำแหน่ง (0, 0) ที่พิมพ์ออกมาจะเป็น (0, 0, 0)
เนื่องจากเป็นค่าสีเริ่มต้นของภาพ RGBA ที่ถูกสร้างขึ้น
*/
/* สรุป
โปรแกรมนี้แสดงการสร้างภาพชนิด RGBA โดยใช้แพ็กเกจ image
ในภาษา Go และการเรียกใช้เมธอด Bounds เพื่อคืนค่าขอบเขต
ของภาพและเมธอด At เพื่อคืนค่าสีของพิกเซลที่ตำแหน่ง (0, 0)
ซึ่งแปลงเป็นค่า RGBA เพื่อพิมพ์ออกทางหน้าจอ โปรแกรมนี้แสดง
การใช้งานเบื้องต้นของแพ็กเกจ image และอินเตอร์เฟซ Image
ในภาษา Go
*/
